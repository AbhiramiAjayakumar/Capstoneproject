{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CourseService {\n  constructor(http) {\n    this.http = http;\n    // get(cid: number) {\n    //   throw new Error('Method not implemented.');\n    // }\n    this.url = 'http://localhost:8081/courses'; // Replace with your actual backend API URL\n  }\n\n  addCourse(course) {\n    const formData = new FormData();\n    return this.http.post(this.url, course);\n  }\n  // getCourseTopics(courseId: number): Observable<any> {\n  //   return this.http.get(`${this.baseUrl}/${courseId}/topics`);\n  // }\n  get(cid) {\n    return this.http.get(`http://localhost:8081/courses/${cid}`);\n  }\n}\nCourseService.ɵfac = function CourseService_Factory(t) {\n  return new (t || CourseService)(i0.ɵɵinject(i1.HttpClient));\n};\nCourseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CourseService,\n  factory: CourseService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,aAAa;EAOxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANxB;IACA;IACA;IAEA,QAAG,GAAG,+BAA+B,CAAC,CAAC;EAEC;;EAExCC,SAAS,CAACC,MAAe;IACvB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAG/B,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,IAAI,CAACC,GAAG,EAAEJ,MAAM,CAAC;EACzC;EAEA;EACA;EACA;EAEAK,GAAG,CAACC,GAAW;IACb,OAAO,IAAI,CAACR,IAAI,CAACO,GAAG,CAAC,iCAAiCC,GAAG,EAAE,CAAC;EAC9D;;AAtBWV,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAW,SAAbX,aAAa;EAAAY,YAFZ;AAAM","names":["CourseService","constructor","http","addCourse","course","formData","FormData","post","url","get","cid","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\245074\\ustproject\\final_project\\frontend1\\src\\app\\course.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Topic } from './Topic';\nimport { Course1 } from './model/course1';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n  // get(cid: number) {\n  //   throw new Error('Method not implemented.');\n  // }\n  \n  url = 'http://localhost:8081/courses'; // Replace with your actual backend API URL\n\n  constructor(private http: HttpClient) { }\n\n  addCourse(course: Course1): Observable<any> {\n    const formData = new FormData();\n\n  \n    return this.http.post(this.url, course);\n  }\n\n  // getCourseTopics(courseId: number): Observable<any> {\n  //   return this.http.get(`${this.baseUrl}/${courseId}/topics`);\n  // }\n\n  get(cid: number): Observable<any> {\n    return this.http.get(`http://localhost:8081/courses/${cid}`);\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}