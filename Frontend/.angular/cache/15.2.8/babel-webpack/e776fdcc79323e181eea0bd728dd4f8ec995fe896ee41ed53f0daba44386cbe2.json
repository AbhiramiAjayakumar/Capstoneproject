{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CourseService {\n  // get(cid: number) {\n  //   throw new Error('Method not implemented.');\n  // }\n  constructor(http) {\n    this.http = http;\n  }\n  addCourse(course) {\n    const formData = new FormData();\n    formData.append('title', course.title);\n    formData.append('description', course.description);\n    // formData.append('file', Topic as unknown as Blob);\n    formData.append('imageFile', course.imageFile);\n    return this.http.post(\"http://localhost:8081/courses\", formData, {\n      responseType: 'text'\n    });\n  }\n  getCourses() {\n    return this.http.get(\"http://localhost:8081/viewAllMovies\");\n  }\n  // getCourseTopics(courseId: number): Observable<any> {\n  //   return this.http.get(`${this.baseUrl}/${courseId}/topics`);\n  // }\n  get(cid) {\n    return this.http.get(`http://localhost:8081/courses/${cid}`);\n  }\n}\nCourseService.ɵfac = function CourseService_Factory(t) {\n  return new (t || CourseService)(i0.ɵɵinject(i1.HttpClient));\n};\nCourseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CourseService,\n  factory: CourseService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,aAAa;EAExB;EACA;EACA;EAGAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,SAAS,CAACC,MAAe;IACvB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,MAAM,CAACI,KAAK,CAAC;IACtCH,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEH,MAAM,CAACK,WAAW,CAAC;IAClD;IAEAJ,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEH,MAAM,CAACM,SAAiB,CAAC;IAItD,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,+BAA+B,EAAEN,QAAQ,EAAE;MAAEO,YAAY,EAAE;IAAM,CAAE,CAAC;EAC5F;EACAC,UAAU;IACR,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAY,qCAAqC,CAAC;EACxE;EAIA;EACA;EACA;EAEAA,GAAG,CAACC,GAAW;IACb,OAAO,IAAI,CAACb,IAAI,CAACY,GAAG,CAAC,iCAAiCC,GAAG,EAAE,CAAC;EAC9D;;AAjCWf,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAgB,SAAbhB,aAAa;EAAAiB,YAFZ;AAAM","names":["CourseService","constructor","http","addCourse","course","formData","FormData","append","title","description","imageFile","post","responseType","getCourses","get","cid","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\245074\\ustproject\\final_project\\frontend1\\src\\app\\course.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Topic } from './Topic';\nimport { Course1 } from './model/course1';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n  \n  // get(cid: number) {\n  //   throw new Error('Method not implemented.');\n  // }\n  \n \n  constructor(private http: HttpClient) { }\n\n  addCourse(course: Course1): Observable<any> {\n    const formData = new FormData();\n    formData.append('title', course.title);\n    formData.append('description', course.description);\n    // formData.append('file', Topic as unknown as Blob);\n    \n    formData.append('imageFile', course.imageFile as Blob);\n  \n   \n  \n    return this.http.post(\"http://localhost:8081/courses\", formData, { responseType: 'text' });\n  }\n  getCourses(): Observable<Course1[]> {\n    return this.http.get<Course1[]>(\"http://localhost:8081/viewAllMovies\");\n  }\n\n\n\n  // getCourseTopics(courseId: number): Observable<any> {\n  //   return this.http.get(`${this.baseUrl}/${courseId}/topics`);\n  // }\n\n  get(cid: number): Observable<any> {\n    return this.http.get(`http://localhost:8081/courses/${cid}`);\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}