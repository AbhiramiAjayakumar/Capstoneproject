{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Topic } from '../model/Topic';\nimport { Course1 } from '../model/course1';\nlet AddcourseComponent = class AddcourseComponent {\n  constructor(http, courseService) {\n    this.http = http;\n    this.courseService = courseService;\n    this.courseAdded = new EventEmitter();\n    this.title = '';\n    this.description = '';\n    this.topics = [];\n  }\n  addTopic() {\n    const topic = new Topic('');\n    this.topics.push(topic);\n  }\n  deleteTopic(index) {\n    this.topics.splice(index, 1);\n  }\n  handleFileInput(event, index) {\n    const fileList = event.target.files;\n    if (fileList.length > 0) {\n      if (index !== undefined) {\n        this.topics[index].content = fileList[0];\n      } else {\n        // Handle the file input for course description\n        this.description = fileList[0].name;\n      }\n    }\n  }\n  onImageFileChange(event) {\n    const file = event.target.files[0];\n    this.imageFile = file;\n  }\n  addCourse() {\n    const course = new Course1(this.title, this.description, this.topics, this.imageFile);\n    console.log(course);\n    this.courseService.addCourse(course).subscribe(response => {\n      console.log('Course added successfully:', response);\n      // Do something with the response if needed\n    }, error => {\n      console.error('Failed to add course:', error);\n      // Handle the error appropriately\n    });\n  }\n};\n\n__decorate([Input()], AddcourseComponent.prototype, \"showModal\", void 0);\n__decorate([Output()], AddcourseComponent.prototype, \"courseAdded\", void 0);\nAddcourseComponent = __decorate([Component({\n  selector: 'app-addcourse',\n  templateUrl: './addcourse.component.html',\n  styleUrls: ['./addcourse.component.css']\n})], AddcourseComponent);\nexport { AddcourseComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAEtE,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,OAAO,QAAQ,kBAAkB;AAOnC,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAS7BC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,SAAI,GAAJD,IAAI;IAAsB,kBAAa,GAAbC,aAAa;IAPjD,gBAAW,GAAG,IAAIR,YAAY,EAAW;IAEnD,UAAK,GAAW,EAAE;IAClB,gBAAW,GAAW,EAAE;IACxB,WAAM,GAAY,EAAE;EAG0D;EAE9ES,QAAQ;IACN,MAAMC,KAAK,GAAG,IAAIP,KAAK,CAAC,EAAE,CAAC;IAC3B,IAAI,CAACQ,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC;EACzB;EAEAG,WAAW,CAACC,KAAa;IACvB,IAAI,CAACH,MAAM,CAACI,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;EAC9B;EAEAE,eAAe,CAACC,KAAU,EAAEH,KAAc;IACxC,MAAMI,QAAQ,GAAaD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC7C,IAAIF,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;MACvB,IAAIP,KAAK,KAAKQ,SAAS,EAAE;QACvB,IAAI,CAACX,MAAM,CAACG,KAAK,CAAC,CAACS,OAAO,GAAGL,QAAQ,CAAC,CAAC,CAAC;OACzC,MAAM;QACL;QACA,IAAI,CAACM,WAAW,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAACO,IAAI;;;EAGzC;EAEAC,iBAAiB,CAACT,KAAU;IAC1B,MAAMU,IAAI,GAAGV,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACQ,SAAS,GAAGD,IAAI;EACvB;EAEAE,SAAS;IACP,MAAMC,MAAM,GAAG,IAAI1B,OAAO,CAAC,IAAI,CAAC2B,KAAK,EAAE,IAAI,CAACP,WAAW,EAAE,IAAI,CAACb,MAAM,EAAE,IAAI,CAACiB,SAAS,CAAC;IACrFI,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnB,IAAI,CAACtB,aAAa,CAACqB,SAAS,CAACC,MAAM,CAAC,CAACI,SAAS,CAC3CC,QAAQ,IAAI;MACXH,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,QAAQ,CAAC;MACnD;IACF,CAAC,EACAC,KAAK,IAAI;MACRJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC,CACF;EACH;CACD;;AAlDUC,YAARpC,KAAK,EAAE,qDAAoB;AAClBoC,YAATnC,MAAM,EAAE,uDAA2C;AAFzCG,kBAAkB,eAL9BN,SAAS,CAAC;EACTuC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWnC,kBAAkB,CAmD9B;SAnDYA,kBAAkB","names":["Component","EventEmitter","Input","Output","Topic","Course1","AddcourseComponent","constructor","http","courseService","addTopic","topic","topics","push","deleteTopic","index","splice","handleFileInput","event","fileList","target","files","length","undefined","content","description","name","onImageFileChange","file","imageFile","addCourse","course","title","console","log","subscribe","response","error","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\245074\\ustproject\\final_project\\frontend1\\src\\app\\addcourse\\addcourse.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CourseService } from '../course.service';\nimport { Topic } from '../model/Topic';\nimport { Course1 } from '../model/course1';\n\n@Component({\n  selector: 'app-addcourse',\n  templateUrl: './addcourse.component.html',\n  styleUrls: ['./addcourse.component.css']\n})\nexport class AddcourseComponent {\n  @Input() showModal: boolean;\n  @Output() courseAdded = new EventEmitter<Course1>();\n\n  title: string = '';\n  description: string = '';\n  topics: Topic[] = [];\n  imageFile!: File;\n\n  constructor(private http: HttpClient, private courseService: CourseService) { }\n\n  addTopic(): void {\n    const topic = new Topic('');\n    this.topics.push(topic);\n  }\n\n  deleteTopic(index: number): void {\n    this.topics.splice(index, 1);\n  }\n\n  handleFileInput(event: any, index?: number): void {\n    const fileList: FileList = event.target.files;\n    if (fileList.length > 0) {\n      if (index !== undefined) {\n        this.topics[index].content = fileList[0];\n      } else {\n        // Handle the file input for course description\n        this.description = fileList[0].name;\n      }\n    }\n  }\n\n  onImageFileChange(event: any) {\n    const file = event.target.files[0];\n    this.imageFile = file;\n  }\n\n  addCourse(): void {\n    const course = new Course1(this.title, this.description, this.topics, this.imageFile);\n    console.log(course);\n    this.courseService.addCourse(course).subscribe(\n      (response) => {\n        console.log('Course added successfully:', response);\n        // Do something with the response if needed\n      },\n      (error) => {\n        console.error('Failed to add course:', error);\n        // Handle the error appropriately\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}